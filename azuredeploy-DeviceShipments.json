{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {    },
    "variables": {
        "appName": "[concat('DeviceShipment', uniqueString(resourceGroup().id))]",
        "storageName": "[toLower(concat('xfstorage', uniqueString(resourceGroup().id) ) )]",
        "eventgridTopic" : "[toLower(concat('topic-event-grid-', uniqueString(resourceGroup().id) ) )]",
        "serverFarmName" : "[concat('ASP-', resourceGroup().name, '-', uniqueString(resourceGroup().id))]",
        "sourceCodeRepositoryURL" : "https://github.com/dijitald/cxDeviceShipments",
        "sourceCodeBranch" : "main"
    },
    "resources": [
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('eventgridTopic')]",
            "location": "centralus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "inputSchema": "EventGridSchema",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageName')]",
            "location": "centralus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'),'/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'),'/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        }, 
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/device-shipment-files')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/deviceshipmentsa9b6')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azureeventgrid",
            "location": "centralus",
            "properties": {
                "displayName": "ddials@microsoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azureeventgrid')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azureeventgridpublish",
            "location": "centralus",
            "properties": {
                "displayName": "EventGridPublish",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azureeventgridpublish')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azurefile",
            "location": "centralus",
            "properties": {
                "displayName": "AzureFileStore",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azurefile')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "sharepointonline",
            "location": "centralus",
            "properties": {
                "displayName": "ddials@microsoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/sharepointonline')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('serverFarmName')]",
            "location": "Central US",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('appName')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('appName'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('appName'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "siteConfig": {
                "appSettings": [
                    {
                    "name": "device-shipments-TopicURI",
                    "value": "[reference(variables('eventgridTopic')).endpoint]"
                    },
                    {
                    "name": "device-shipments-TopicKEY",
                    "value": "[listKeys(variables('eventgridTopic'),'2020-04-01-preview').key1]"
                    }
                    ]
                }
            },
            "resources" : [
            {
                "apiVersion": "2015-08-01",
                "name": "sccFunction",
                "type": "sourcecontrols",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/sites/', variables('appName'))]"
                ],
                "properties": {
                    "RepoUrl": "[variables('sourceCodeRepositoryURL')]",
                    "branch": "[variables('sourceCodeBranch')]",
                    "IsManualIntegration": true,
                    "publishRunbook" : true
                }
            }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('appName'), '/web')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$', variables('appName'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name":  "[concat(variables('appName'), '/Approved')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "script_root_path_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/Approved/')]",
                "script_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/bin/DeviceShipments.dll')]",
                "config_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/Approved/function.json')]",
                "href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/functions/Approved')]",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('appName'), '/NewFile')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "script_root_path_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/NewFile/')]",
                "script_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/bin/DeviceShipments.dll')]",
                "config_href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/vfs/site/wwwroot/NewFile/function.json')]",
                "href": "[concat('https://', variables('appName'), '.azurewebsites.net/admin/functions/NewFile')]",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('appName'), '/', toLower(variables('appName')), '.azurewebsites.net')]",
            "location": "Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appName'))]"
            ],
            "properties": {
                "siteName": "[variables('appName')]",
                "hostNameType": "Verified"
            }
        },

        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "logic-device-shipments",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'azureeventgridpublish')]",
                "[resourceId('Microsoft.Web/connections', 'azurefile')]",
                "[resourceId('Microsoft.Web/connections', 'sharepointonline')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_item_is_created_or_modified": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 30
                            },
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://microsoft.sharepoint.com/teams/DrewsTestGroup'))}/tables/@{encodeURIComponent(encodeURIComponent('75d09166-d2c1-4d8f-9847-edce7ea8cb6c'))}/onupdateditems"
                            }
                        }
                    },
                    "actions": {
                        "Switch": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "Approved",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Publish_Event_2": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": [
                                                            {
                                                                "data": "@triggerBody()?['Output_x0020_File']",
                                                                "eventType": "@triggerBody()?['Status']?['Value']",
                                                                "id": "@{triggerBody()?['ID']}",
                                                                "subject": "@triggerBody()?['Output_x0020_File']"
                                                            }
                                                        ],
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azureeventgridpublish']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/eventGrid/api/events"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@triggerBody()?['Output_x0020_File']",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "New",
                                    "actions": {
                                        "Condition_2": {
                                            "actions": {
                                                "For_each": {
                                                    "foreach": "@body('Get_attachments')",
                                                    "actions": {
                                                        "Create_file": {
                                                            "runAfter": {
                                                                "Get_attachment_content": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": "@body('Get_attachment_content')",
                                                                "headers": {
                                                                    "ReadFileMetadataFromServer": true
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azurefile']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/datasets/default/files",
                                                                "queries": {
                                                                    "folderPath": "/device-shipment-files",
                                                                    "name": "@items('For_each')?['DisplayName']",
                                                                    "queryParametersSingleEncoded": true
                                                                }
                                                            },
                                                            "runtimeConfiguration": {
                                                                "contentTransfer": {
                                                                    "transferMode": "Chunked"
                                                                }
                                                            }
                                                        },
                                                        "Get_attachment_content": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://microsoft.sharepoint.com/teams/DrewsTestGroup'))}/tables/@{encodeURIComponent(encodeURIComponent('75d09166-d2c1-4d8f-9847-edce7ea8cb6c'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['ID']))}/attachments/@{encodeURIComponent(items('For_each')?['Id'])}/$value"
                                                            }
                                                        },
                                                        "Publish_Event": {
                                                            "runAfter": {
                                                                "Create_file": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": [
                                                                    {
                                                                        "data": "@body('Create_file')?['Path']",
                                                                        "eventType": "@triggerBody()?['Status']?['Value']",
                                                                        "id": "@{triggerBody()?['ID']}",
                                                                        "subject": "@body('Create_file')?['Path']"
                                                                    }
                                                                ],
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azureeventgridpublish']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/eventGrid/api/events"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_attachments": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Get_attachments": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://microsoft.sharepoint.com/teams/DrewsTestGroup'))}/tables/@{encodeURIComponent(encodeURIComponent('75d09166-d2c1-4d8f-9847-edce7ea8cb6c'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['ID']))}/attachments"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@triggerBody()?['{HasAttachments}']",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['Status']?['Value']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgridpublish": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureeventgridpublish')]",
                                "connectionName": "azureeventgridpublish",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azureeventgridpublish')]"
                            },
                            "azurefile": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azurefile')]",
                                "connectionName": "azurefile",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azurefile')]"
                            },
                            "sharepointonline": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'sharepointonline')]",
                                "connectionName": "sharepointonline",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/sharepointonline')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "logic-device-shipments-eventgrid",
            "location": "centralus",
            "dependsOn": [
"[resourceId('Microsoft.EventGrid/topics', variables('eventgridTopic'))]",
"[resourceId('Microsoft.Web/connections', 'sharepointonline')]",
"[resourceId('Microsoft.Web/connections', 'azureeventgrid')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Subscription ID": {
                            "defaultValue": "[subscription().id]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', variables('eventgridTopic'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().id, ''')}/providers/@{encodeURIComponent(''Microsoft.EventGrid.Topics'')}/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Update_item": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Output_x0020_File": "@triggerBody()?['subject']",
                                            "Status": {
                                                "Value": "@triggerBody()?['eventType']"
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline_1']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://microsoft.sharepoint.com/teams/DrewsTestGroup'))}/tables/@{encodeURIComponent(encodeURIComponent('75d09166-d2c1-4d8f-9847-edce7ea8cb6c'))}/items/@{encodeURIComponent(triggerBody()?['id'])}"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['eventType']",
                                            "Processed"
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@triggerBody()?['eventType']",
                                            "Final"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureeventgrid')]",
                                "connectionName": "azureeventgrid",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/azureeventgrid')]"
                            },
                            "sharepointonline_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'sharepointonline')]",
                                "connectionName": "sharepointonline",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/centralus/managedApis/sharepointonline')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}